{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNa4kzV5FRukayH7lriMxzM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":801},"id":"zhkB4udSzY_a","executionInfo":{"status":"ok","timestamp":1746621533107,"user_tz":-180,"elapsed":6239,"user":{"displayName":"Ivaylo Ivanov","userId":"07252631538739634782"}},"outputId":"0f9515b7-f982-49b2-a4b5-5bb88aca345d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting dash\n","  Downloading dash-3.0.4-py3-none-any.whl.metadata (10 kB)\n","Collecting Flask<3.1,>=1.0.4 (from dash)\n","  Downloading flask-3.0.3-py3-none-any.whl.metadata (3.2 kB)\n","Collecting Werkzeug<3.1 (from dash)\n","  Downloading werkzeug-3.0.6-py3-none-any.whl.metadata (3.7 kB)\n","Requirement already satisfied: plotly>=5.0.0 in /usr/local/lib/python3.11/dist-packages (from dash) (5.24.1)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.11/dist-packages (from dash) (8.7.0)\n","Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.11/dist-packages (from dash) (4.13.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from dash) (2.32.3)\n","Collecting retrying (from dash)\n","  Downloading retrying-1.3.4-py3-none-any.whl.metadata (6.9 kB)\n","Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.11/dist-packages (from dash) (1.6.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.11/dist-packages (from dash) (75.2.0)\n","Requirement already satisfied: Jinja2>=3.1.2 in /usr/local/lib/python3.11/dist-packages (from Flask<3.1,>=1.0.4->dash) (3.1.6)\n","Requirement already satisfied: itsdangerous>=2.1.2 in /usr/local/lib/python3.11/dist-packages (from Flask<3.1,>=1.0.4->dash) (2.2.0)\n","Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.11/dist-packages (from Flask<3.1,>=1.0.4->dash) (8.1.8)\n","Requirement already satisfied: blinker>=1.6.2 in /usr/local/lib/python3.11/dist-packages (from Flask<3.1,>=1.0.4->dash) (1.9.0)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.11/dist-packages (from plotly>=5.0.0->dash) (9.1.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from plotly>=5.0.0->dash) (24.2)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.11/dist-packages (from Werkzeug<3.1->dash) (3.0.2)\n","Requirement already satisfied: zipp>=3.20 in /usr/local/lib/python3.11/dist-packages (from importlib-metadata->dash) (3.21.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->dash) (3.4.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->dash) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->dash) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->dash) (2025.4.26)\n","Requirement already satisfied: six>=1.7.0 in /usr/local/lib/python3.11/dist-packages (from retrying->dash) (1.17.0)\n","Downloading dash-3.0.4-py3-none-any.whl (7.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.9/7.9 MB\u001b[0m \u001b[31m40.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading flask-3.0.3-py3-none-any.whl (101 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m101.7/101.7 kB\u001b[0m \u001b[31m10.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading werkzeug-3.0.6-py3-none-any.whl (227 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m228.0/228.0 kB\u001b[0m \u001b[31m19.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading retrying-1.3.4-py3-none-any.whl (11 kB)\n","Installing collected packages: Werkzeug, retrying, Flask, dash\n","  Attempting uninstall: Werkzeug\n","    Found existing installation: Werkzeug 3.1.3\n","    Uninstalling Werkzeug-3.1.3:\n","      Successfully uninstalled Werkzeug-3.1.3\n","  Attempting uninstall: Flask\n","    Found existing installation: Flask 3.1.0\n","    Uninstalling Flask-3.1.0:\n","      Successfully uninstalled Flask-3.1.0\n","Successfully installed Flask-3.0.3 Werkzeug-3.0.6 dash-3.0.4 retrying-1.3.4\n"]}],"source":["!pip install dash\n","\n","import pandas as pd\n","import dash\n","from dash import html\n","from dash import dcc\n","from dash.dependencies import Input, Output\n","import plotly.express as px"]},{"cell_type":"code","source":["!wget \"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/spacex_launch_dash.csv\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E53girT9wgY0","executionInfo":{"status":"ok","timestamp":1746621588333,"user_tz":-180,"elapsed":317,"user":{"displayName":"Ivaylo Ivanov","userId":"07252631538739634782"}},"outputId":"aad51f7e-8c52-4c11-8344-31c83205184e"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-05-07 12:39:47--  https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/spacex_launch_dash.csv\n","Resolving cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud (cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud)... 169.45.118.108\n","Connecting to cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud (cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud)|169.45.118.108|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 2476 (2.4K) [text/csv]\n","Saving to: ‘spacex_launch_dash.csv’\n","\n","spacex_launch_dash. 100%[===================>]   2.42K  --.-KB/s    in 0s      \n","\n","2025-05-07 12:39:48 (639 MB/s) - ‘spacex_launch_dash.csv’ saved [2476/2476]\n","\n"]}]},{"cell_type":"code","source":["# Read the airline data into pandas dataframe\n","spacex_df = pd.read_csv(\"spacex_launch_dash.csv\")\n","max_payload = spacex_df['Payload Mass (kg)'].max()\n","min_payload = spacex_df['Payload Mass (kg)'].min()\n","\n","print(spacex_df.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rMKuM43QuLlS","executionInfo":{"status":"ok","timestamp":1746621990347,"user_tz":-180,"elapsed":24,"user":{"displayName":"Ivaylo Ivanov","userId":"07252631538739634782"}},"outputId":"c082d584-83ee-44c3-a360-98a7e5e227a4"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["   Unnamed: 0  Flight Number  Launch Site  class  Payload Mass (kg)  \\\n","0           0              1  CCAFS LC-40      0                0.0   \n","1           1              2  CCAFS LC-40      0                0.0   \n","2           2              3  CCAFS LC-40      0              525.0   \n","3           3              4  CCAFS LC-40      0              500.0   \n","4           4              5  CCAFS LC-40      0              677.0   \n","\n","  Booster Version Booster Version Category  \n","0  F9 v1.0  B0003                     v1.0  \n","1  F9 v1.0  B0004                     v1.0  \n","2  F9 v1.0  B0005                     v1.0  \n","3  F9 v1.0  B0006                     v1.0  \n","4  F9 v1.0  B0007                     v1.0  \n"]}]},{"cell_type":"code","source":["# Create a dash application\n","app = dash.Dash(__name__)\n","\n","# Create an app layout\n","app.layout = html.Div(children=[html.H1('SpaceX Launch Records Dashboard',\n","                                        style={'textAlign': 'center', 'color': '#503D36',\n","                                               'font-size': 40}),\n","                                # TASK 1: Add a dropdown list to enable Launch Site selection\n","                                # The default select value is for ALL sites\n","                                dcc.Dropdown(id='site-dropdown',options=[\n","                                                {'label': 'All Sites', 'value': 'ALL'},\n","                                                {'label': 'CCAFS LC', 'value': 'CCAFS LC-40'},\n","                                                {'label': 'KSC', 'value': 'KSC LC-39A'},\n","                                                {'label': 'VAFB', 'value': 'VAFB SLC-4E'},\n","                                                {'label': 'CCAFS SLC', 'value': 'CCAFS SLC-40'}\n","                                                ] ,\n","                                              value='ALL',\n","                                              placeholder=\"Select a Launch Site here\",\n","                                              searchable=True\n","                                             ),\n","                                html.Br(),\n","\n","                                # TASK 2: Add a pie chart to show the total successful launches count for all sites\n","                                # If a specific launch site was selected, show the Success vs. Failed counts for the site\n","                                html.Div(dcc.Graph(id='success-pie-chart')),\n","                                html.Br(),\n","                                html.P(\"Payload range (Kg):\"),\n","\n","                                # TASK 3: Add a slider to select payload range\n","                                dcc.RangeSlider(id='payload-slider',\n","                                 min=0, max=max_payload, step=1000,\n","                                  marks={0: '0', 2500: '2500', 5000: '5000', 7500: '7500', 10000: '10000', 12500: '12500'},\n","                                  value=[min_payload, max_payload]),\n","\n","                                # TASK 4: Add a scatter chart to show the correlation between payload and launch success\n","                                html.Div(dcc.Graph(id='success-payload-scatter-chart')),\n","                                ])\n","\n","# TASK 2:\n","# Add a callback function for `site-dropdown` as input, `success-pie-chart` as output\n","@app.callback(Output(component_id='success-pie-chart', component_property='figure'),\n","              Input(component_id='site-dropdown', component_property='value'))\n","def get_pie_chart(entered_site):\n","    filtered_df = spacex_df\n","    if entered_site == 'ALL':\n","        all_sites_success_df = spacex_df[spacex_df['class'] == 1]\n","        site_success_counts = all_sites_success_df['Launch Site'].value_counts().reset_index()\n","        site_success_counts.columns = ['Launch Site', 'count'] # Ensure correct column names for px.pie\n","        fig = px.pie(site_success_counts,\n","          values='count',\n","          names='Launch Site',\n","          title='Total Successful Launches By All Sites')\n","        return fig\n","    else:\n","        specific_site_df = spacex_df[spacex_df['Launch Site'] == entered_site]\n","        status_counts = specific_site_df['class'].value_counts().reset_index()\n","        status_counts.columns = ['class_status', 'count']\n","        fig = px.pie(status_counts,\n","          values='count',\n","          names='class_status', # Use the new 'Outcome' column with 'Success'/'Failure'\n","          title=f'Total Success vs. Failed Launches for site: {entered_site}')\n","        return fig\n","\n","# TASK 4:\n","# Add a callback function for `site-dropdown` and `payload-slider` as inputs, `success-payload-scatter-chart` as output\n","@app.callback(Output(component_id='success-payload-scatter-chart', component_property='figure'),\n","              [Input(component_id='site-dropdown', component_property='value'), Input(component_id=\"payload-slider\", component_property=\"value\")])\n","\n","def get_scatter_chart(entered_site, payload_range):\n","    low, high = payload_range\n","    filtered_df = spacex_df[(spacex_df['Payload Mass (kg)'] >= low) &\n","                               (spacex_df['Payload Mass (kg)'] <= high)]\n","    if entered_site == 'ALL':\n","      fig = px.scatter(filtered_df, x='Payload Mass (kg)', y='class', color='Booster Version Category')\n","      return fig\n","    else:\n","      fig = px.scatter(filtered_df[filtered_df['Launch Site'] == entered_site], x='Payload Mass (kg)', y='class', color='Booster Version Category',\n","                       title=f'Correlation between Payload and Success for site {entered_site}')\n","      return fig\n","\n","# Run the app\n","if __name__ == '__main__':\n","    app.run()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":671},"id":"qF7gdk8RwsMn","executionInfo":{"status":"ok","timestamp":1746632018459,"user_tz":-180,"elapsed":451,"user":{"displayName":"Ivaylo Ivanov","userId":"07252631538739634782"}},"outputId":"771ec87f-410d-4a37-a02f-36f852da80f9"},"execution_count":46,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["(async (port, path, width, height, cache, element) => {\n","    if (!google.colab.kernel.accessAllowed && !cache) {\n","      return;\n","    }\n","    element.appendChild(document.createTextNode(''));\n","    const url = await google.colab.kernel.proxyPort(port, {cache});\n","    const iframe = document.createElement('iframe');\n","    iframe.src = new URL(path, url).toString();\n","    iframe.height = height;\n","    iframe.width = width;\n","    iframe.style.border = 0;\n","    iframe.allow = [\n","        'accelerometer',\n","        'autoplay',\n","        'camera',\n","        'clipboard-read',\n","        'clipboard-write',\n","        'gyroscope',\n","        'magnetometer',\n","        'microphone',\n","        'serial',\n","        'usb',\n","        'xr-spatial-tracking',\n","    ].join('; ');\n","    element.appendChild(iframe);\n","  })(8050, \"/\", \"100%\", 650, false, window.element)"]},"metadata":{}}]}]}